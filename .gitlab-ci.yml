stages:
  - build
  - test
  - analyze
  - deploy

cache:
  paths:
    - ~/.m2
    - /root/.m2
  untracked: true


################################################################################
# Job-Templates

.job-template: &add-services
  image: $CI_REGISTRY_IMAGE:testing
  services:
    - name: $CI_REGISTRY_IMAGE/dbas-db:testing
      alias: dbas-db
    - name: rabbitmq:3.6-alpine
      alias: broker
    - name: $CI_REGISTRY_IMAGE/search:testing
      alias: search
  variables:
    DBAS_DB_HOST: dbas-db
    DBAS_DB_PORT: "5432"
    DBAS_DB_USER: "postgres"
    DBAS_DB_PW: "DXxCNtfnt!MOo!f8LY1!P%sw3KGzt@s!"
    DBAS_AUTHN_SECRET: "89#s3cr3t_15"
    RABBITMQ_DEFAULT_USER: "groot"     # RabbitMQ
    RABBITMQ_DEFAULT_PASS: "iamgroot"
    BROKER_HOST: "broker"
    BROKER_USER: "groot"
    BROKER_PASS: "iamgroot"
    ES_JAVA_OPTS: "-Xms512m -Xmx512m"


################################################################################
# Jobs

build_test_images:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    # Build aggregator
    - docker build -t $CI_REGISTRY_IMAGE --pull aggregator
    - docker tag $CI_REGISTRY_IMAGE $CI_REGISTRY_IMAGE:testing
    - docker push $CI_REGISTRY_IMAGE:testing
    # Build database
    - docker build -t $CI_REGISTRY_IMAGE/dbas-db --pull dbas/docker/db/
    - docker tag $CI_REGISTRY_IMAGE/dbas-db $CI_REGISTRY_IMAGE/dbas-db:testing
    - docker push $CI_REGISTRY_IMAGE/dbas-db:testing
    # Build elasticsearch
    - docker build -t $CI_REGISTRY_IMAGE/search --pull elasticsearch/
    - docker tag $CI_REGISTRY_IMAGE/search $CI_REGISTRY_IMAGE/search:testing
    - docker push $CI_REGISTRY_IMAGE/search:testing

idiomatic?:
  image: clojure:alpine
  stage: test
  script:
    - cd aggregator
    - lein kibit
  allow_failure: true

test:
  <<: *add-services
  stage: test
  tags:
    - 40c
  script:
    - lein cloverage
